{
    "react": {
        "meta": {
            "upgradeGuide": "https://react.dev/blog/2024/04/25/react-19-upgrade-guide",
            "notes": "React 19 removes or breaks many long-deprecated APIs, including defaultProps for functions, legacy context, string refs, etc."
        },
        "lifecycleMethods": [
            {
            "name": "componentWillMount",
            "deprecatedInVersion": "16.3",
            "pattern": "componentWillMount",
            "alternative": "Use constructor or componentDidMount (or useEffect in functional components)",
            "severity": "error"
            },
            {
            "name": "componentWillReceiveProps",
            "deprecatedInVersion": "16.3",
            "pattern": "componentWillReceiveProps",
            "alternative": "Use static getDerivedStateFromProps or componentDidUpdate / useEffect",
            "severity": "error"
            },
            {
            "name": "componentWillUpdate",
            "deprecatedInVersion": "16.3",
            "pattern": "componentWillUpdate",
            "alternative": "Use getSnapshotBeforeUpdate or componentDidUpdate / useEffect",
            "severity": "error"
            },
            {
            "name": "UNSAFE_componentWillMount",
            "deprecatedInVersion": "17.0",
            "pattern": "UNSAFE_componentWillMount",
            "alternative": "Use constructor or componentDidMount / useEffect",
            "severity": "warning"
            },
            {
            "name": "UNSAFE_componentWillReceiveProps",
            "deprecatedInVersion": "17.0",
            "pattern": "UNSAFE_componentWillReceiveProps",
            "alternative": "Use static getDerivedStateFromProps or componentDidUpdate / useEffect",
            "severity": "warning"
            },
            {
            "name": "UNSAFE_componentWillUpdate",
            "deprecatedInVersion": "17.0",
            "pattern": "UNSAFE_componentWillUpdate",
            "alternative": "Use getSnapshotBeforeUpdate or componentDidUpdate / useEffect",
            "severity": "warning"
            }
        ],
        "refs": [
            {
            "name": "string refs / this.refs",
            "deprecatedInVersion": "16.3",
            "pattern": "ref=\"myRef\" / this.refs.myRef",
            "alternative": "Use React.createRef() or callback refs / useRef",
            "severity": "warning"
            }
        ],
        "context": [
            {
            "name": "Legacy Context API",
            "deprecatedInVersion": "16.3",
            "pattern": "getChildContext / childContextTypes / contextTypes",
            "alternative": "Use React.createContext(), Context.Provider, and static contextType or useContext",
            "severity": "error"
            }
        ],
        "domMethods": [
            {
            "name": "findDOMNode",
            "deprecatedInVersion": "16.3",
            "pattern": "ReactDOM.findDOMNode(...)",
            "alternative": "Use refs to access DOM nodes directly",
            "severity": "warning"
            }
        ],
        "rendering": [
            {
            "name": "ReactDOM.render",
            "deprecatedInVersion": "18.0",
            "pattern": "ReactDOM.render(...)",
            "alternative": "Use ReactDOM.createRoot(...).render(...)",
            "severity": "error"
            },
            {
            "name": "ReactDOM.hydrate",
            "deprecatedInVersion": "18.0",
            "pattern": "ReactDOM.hydrate(...)",
            "alternative": "Use ReactDOM.hydrateRoot(...)",
            "severity": "warning"
            },
            {
            "name": "ReactDOM.unmountComponentAtNode",
            "deprecatedInVersion": "18.0",
            "pattern": "ReactDOM.unmountComponentAtNode(...)",
            "alternative": "Use root.unmount() via createRoot",
            "severity": "warning"
            }
        ],
        "factory / legacyComponentCreation": [
            {
            "name": "createFactory",
            "deprecatedInVersion": "16.13",
            "pattern": "React.createFactory(...)",
            "alternative": "Use JSX / React.createElement directly",
            "severity": "warning"
            },
            {
            "name": "factory component pattern (module pattern factories)",
            "deprecatedInVersion": "16.9",
            "pattern": "function FactoryComponent() { return { render() { ... } } }",
            "alternative": "Use plain functional or class components",
            "severity": "warning"
            }
        ],
        "patterns": [
            {
            "name": "defaultProps on function components",
            "deprecatedInVersion": "React 19",
            "pattern": "MyComponent.defaultProps = { ... }",
            "alternative": "Use default parameter values in function signature",
            "severity": "error"
            }
        ],
        "others": [
            {
            "name": "react-test-renderer/shallow",
            "deprecatedInVersion": "React 19",
            "pattern": "import ShallowRenderer from 'react-test-renderer/shallow'",
            "alternative": "import from 'react-shallow-renderer'",
            "severity": "warning"
            },
            {
            "name": "react-dom/test-utils act import",
            "deprecatedInVersion": "React 19",
            "pattern": "import { act } from 'react-dom/test-utils'",
            "alternative": "import { act } from 'react'",
            "severity": "warning"
            }
        ]
        }
    }